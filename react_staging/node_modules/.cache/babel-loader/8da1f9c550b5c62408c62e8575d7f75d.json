{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u6211\\u7684\\u6587\\u6863\\\\\\u5E06\\\\github\\\\learn-react\\\\react_staging\\\\src\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(process.env.REACT_APP_API);\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: \"01\",\n        name: '吃饭',\n        done: true\n      }, {\n        id: \"02\",\n        name: '睡觉',\n        done: false\n      }, {\n        id: \"03\",\n        name: '打代码',\n        done: false\n      }, {\n        id: \"04\",\n        name: '逛街',\n        done: false\n      }]\n    };\n\n    this.addTodo = todoObj => {\n      // 获取原todos\n      const {\n        todos\n      } = this.state; // 追加一个todo\n\n      const newTodos = [todoObj, ...todos];\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.updateTodo = (id, done) => {\n      // 获取状态中的todos\n      const {\n        todos\n      } = this.state; // 匹配处理数据\n\n      const newTodos = todos.map(todoObj => {\n        if (todoObj.id === id) return { ...todoObj,\n          done\n        };else return todoObj;\n      });\n      this.setState({\n        todos: newTodos\n      });\n    };\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          addTodo: this.addTodo,\n          updateTodo: this.updateTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          todos: todos\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/我的文档/帆/github/learn-react/react_staging/src/App.jsx"],"names":["React","Component","Header","List","Footer","console","log","process","env","REACT_APP_API","App","state","todos","id","name","done","addTodo","todoObj","newTodos","setState","updateTodo","map","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,aAAxB;AACA,eAAe,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAEvCU,KAFuC,GAE/B;AACJC,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,IAAI,EAAE,IAAlB;AAAwBC,QAAAA,IAAI,EAAE;AAA9B,OADG,EAEH;AAAEF,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,IAAI,EAAE,IAAlB;AAAwBC,QAAAA,IAAI,EAAE;AAA9B,OAFG,EAGH;AAAEF,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,IAAI,EAAE,KAAlB;AAAyBC,QAAAA,IAAI,EAAE;AAA/B,OAHG,EAIH;AAAEF,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,IAAI,EAAE,IAAlB;AAAwBC,QAAAA,IAAI,EAAE;AAA9B,OAJG;AADH,KAF+B;;AAAA,SAWvCC,OAXuC,GAW5BC,OAAD,IAAa;AACnB;AACA,YAAM;AAAEL,QAAAA;AAAF,UAAY,KAAKD,KAAvB,CAFmB,CAGnB;;AACA,YAAMO,QAAQ,GAAG,CAACD,OAAD,EAAU,GAAGL,KAAb,CAAjB;AACA,WAAKO,QAAL,CAAc;AACVP,QAAAA,KAAK,EAAEM;AADG,OAAd;AAGH,KAnBsC;;AAAA,SAqBvCE,UArBuC,GAqB1B,CAACP,EAAD,EAAKE,IAAL,KAAc;AACvB;AACA,YAAM;AAAEH,QAAAA;AAAF,UAAY,KAAKD,KAAvB,CAFuB,CAGvB;;AACA,YAAMO,QAAQ,GAAGN,KAAK,CAACS,GAAN,CAAWJ,OAAD,IAAa;AACpC,YAAIA,OAAO,CAACJ,EAAR,KAAeA,EAAnB,EAAuB,OAAO,EAAE,GAAGI,OAAL;AAAcF,UAAAA;AAAd,SAAP,CAAvB,KACK,OAAOE,OAAP;AAER,OAJgB,CAAjB;AAKA,WAAKE,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEM;AAAT,OAAd;AACH,KA/BsC;AAAA;;AAgCvCI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEV,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKK,OAAtB;AAA+B,UAAA,UAAU,EAAE,KAAKI;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAER;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA3CsC","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from './components/Header'\r\nimport List from './components/List'\r\nimport Footer from './components/Footer'\r\nimport './App.css'\r\n\r\nconsole.log(process.env.REACT_APP_API)\r\nexport default class App extends Component {\r\n    // 初始化状态\r\n    state = {\r\n        todos: [\r\n            { id: \"01\", name: '吃饭', done: true },\r\n            { id: \"02\", name: '睡觉', done: false },\r\n            { id: \"03\", name: '打代码', done: false },\r\n            { id: \"04\", name: '逛街', done: false },\r\n        ]\r\n    }\r\n    // addTodo用于添加一个todo，接收的参数是todo对象\r\n    addTodo = (todoObj) => {\r\n        // 获取原todos\r\n        const { todos } = this.state\r\n        // 追加一个todo\r\n        const newTodos = [todoObj, ...todos]\r\n        this.setState({\r\n            todos: newTodos\r\n        })\r\n    }\r\n    // addTodo用于添加一个todo，接收的参数是todo对象\r\n    updateTodo = (id, done) => {\r\n        // 获取状态中的todos\r\n        const { todos } = this.state\r\n        // 匹配处理数据\r\n        const newTodos = todos.map((todoObj) => {\r\n            if (todoObj.id === id) return { ...todoObj, done }\r\n            else return todoObj\r\n\r\n        })\r\n        this.setState({ todos: newTodos })\r\n    }\r\n    render() {\r\n        const { todos } = this.state\r\n        return (\r\n            <div className=\"todo-container\">\r\n                <div className=\"todo-wrap\">\r\n                    <Header addTodo={this.addTodo} updateTodo={this.updateTodo} />\r\n                    <List todos={todos} />\r\n                    <Footer />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}